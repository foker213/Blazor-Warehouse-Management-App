// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WarehouseManagement.DataBase;

#nullable disable

namespace WarehouseManagement.DataBase.Migrations
{
    [DbContext(typeof(WarehouseDbContext))]
    [Migration("20250807125058_Warhouse")]
    partial class Warhouse
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WarehouseManagement.Domain.Models.Balance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int>("ResourceId")
                        .HasColumnType("integer");

                    b.Property<int>("UnitOfMeasureId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ResourceId")
                        .IsUnique();

                    b.HasIndex("UnitOfMeasureId")
                        .IsUnique();

                    b.ToTable("Balances");
                });

            modelBuilder.Entity("WarehouseManagement.Domain.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("State")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("WarehouseManagement.Domain.Models.ReceiptDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ReceiptDocuments");
                });

            modelBuilder.Entity("WarehouseManagement.Domain.Models.ReceiptResource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int>("ReceiptDocumentId")
                        .HasColumnType("integer");

                    b.Property<int>("ResourceId")
                        .HasColumnType("integer");

                    b.Property<int>("UnitOfMeasureId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ReceiptDocumentId");

                    b.HasIndex("ResourceId")
                        .IsUnique();

                    b.HasIndex("UnitOfMeasureId")
                        .IsUnique();

                    b.ToTable("ReceiptResources");
                });

            modelBuilder.Entity("WarehouseManagement.Domain.Models.Resource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("State")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Resources");
                });

            modelBuilder.Entity("WarehouseManagement.Domain.Models.ShipmentDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ClientId")
                        .IsUnique();

                    b.ToTable("ShipmentDocuments");
                });

            modelBuilder.Entity("WarehouseManagement.Domain.Models.ShipmentResource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int>("ResourceId")
                        .HasColumnType("integer");

                    b.Property<int>("ShipmentDocumentId")
                        .HasColumnType("integer");

                    b.Property<int>("UnitOfMeasureId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ResourceId")
                        .IsUnique();

                    b.HasIndex("ShipmentDocumentId");

                    b.HasIndex("UnitOfMeasureId")
                        .IsUnique();

                    b.ToTable("ShipmentResources");
                });

            modelBuilder.Entity("WarehouseManagement.Domain.Models.UnitOfMeasure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("State")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("UnitsOfMeasure");
                });

            modelBuilder.Entity("WarehouseManagement.Domain.Models.Balance", b =>
                {
                    b.HasOne("WarehouseManagement.Domain.Models.Resource", "Resource")
                        .WithOne("Balance")
                        .HasForeignKey("WarehouseManagement.Domain.Models.Balance", "ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WarehouseManagement.Domain.Models.UnitOfMeasure", "UnitOfMeasure")
                        .WithOne("Balance")
                        .HasForeignKey("WarehouseManagement.Domain.Models.Balance", "UnitOfMeasureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resource");

                    b.Navigation("UnitOfMeasure");
                });

            modelBuilder.Entity("WarehouseManagement.Domain.Models.ReceiptResource", b =>
                {
                    b.HasOne("WarehouseManagement.Domain.Models.ReceiptDocument", "ReceiptDocument")
                        .WithMany("ReceiptResources")
                        .HasForeignKey("ReceiptDocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WarehouseManagement.Domain.Models.Resource", "Resource")
                        .WithOne("ReceiptResource")
                        .HasForeignKey("WarehouseManagement.Domain.Models.ReceiptResource", "ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WarehouseManagement.Domain.Models.UnitOfMeasure", "UnitOfMeasure")
                        .WithOne("ReceiptResource")
                        .HasForeignKey("WarehouseManagement.Domain.Models.ReceiptResource", "UnitOfMeasureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReceiptDocument");

                    b.Navigation("Resource");

                    b.Navigation("UnitOfMeasure");
                });

            modelBuilder.Entity("WarehouseManagement.Domain.Models.ShipmentDocument", b =>
                {
                    b.HasOne("WarehouseManagement.Domain.Models.Client", "Client")
                        .WithOne("ShipmentDocument")
                        .HasForeignKey("WarehouseManagement.Domain.Models.ShipmentDocument", "ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("WarehouseManagement.Domain.Models.ShipmentResource", b =>
                {
                    b.HasOne("WarehouseManagement.Domain.Models.Resource", "Resource")
                        .WithOne("ShipmentResource")
                        .HasForeignKey("WarehouseManagement.Domain.Models.ShipmentResource", "ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WarehouseManagement.Domain.Models.ShipmentDocument", "ShipmentDocument")
                        .WithMany("ShipmentResources")
                        .HasForeignKey("ShipmentDocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WarehouseManagement.Domain.Models.UnitOfMeasure", "UnitOfMeasure")
                        .WithOne("ShipmentResource")
                        .HasForeignKey("WarehouseManagement.Domain.Models.ShipmentResource", "UnitOfMeasureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resource");

                    b.Navigation("ShipmentDocument");

                    b.Navigation("UnitOfMeasure");
                });

            modelBuilder.Entity("WarehouseManagement.Domain.Models.Client", b =>
                {
                    b.Navigation("ShipmentDocument");
                });

            modelBuilder.Entity("WarehouseManagement.Domain.Models.ReceiptDocument", b =>
                {
                    b.Navigation("ReceiptResources");
                });

            modelBuilder.Entity("WarehouseManagement.Domain.Models.Resource", b =>
                {
                    b.Navigation("Balance");

                    b.Navigation("ReceiptResource");

                    b.Navigation("ShipmentResource");
                });

            modelBuilder.Entity("WarehouseManagement.Domain.Models.ShipmentDocument", b =>
                {
                    b.Navigation("ShipmentResources");
                });

            modelBuilder.Entity("WarehouseManagement.Domain.Models.UnitOfMeasure", b =>
                {
                    b.Navigation("Balance");

                    b.Navigation("ReceiptResource");

                    b.Navigation("ShipmentResource");
                });
#pragma warning restore 612, 618
        }
    }
}
